{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminPassword": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "ASSIGN THE ADMIN PASSWORD AT RUNTIME -- DO NOT SAVE IN TEMPLATE"
            }
        },
        "adminUsername": {
            "type": "string",
            "defaultValue": "sfcadmin"
        },
        "bootstrapStorageAccount": {
            "type": "string",
            "defaultValue": ""
        },
        "bootstrapAccessKey": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "ASSIGN THE ACCESS KEY AT RUNTIME -- DO NOT SAVE IN TEMPLATE"
            }
        },
        "bootstrapFileShare": {
            "type": "string",
            "defaultValue": ""
        },
        "deployFirewall": {
            "type": "bool",
            "defaultValue": true
        },
        "environment": {
            "type": "string",
            "defaultValue": "dev",
            "allowedValues": [
                "prod",
                "dev",
                "sandbox"
            ]
        },
        "fwName": {
            "type": "string",
            "defaultValue": ""
        },
        "location": {
            "type": "string",
            "defaultValue": "westus3",
            "allowedValues": [
                "westus",
                "westus2",
                "westus3"
            ]
        },
        "osDiskType": {
            "type": "string",
            "defaultValue": "Standard_LRS"
        },
        "paSku": {
            "type": "string",
            "defaultValue": "byol",
            "allowedValues": [
                "byol",
                "bundle1",
                "bundle2",
                "vmseries-flex"
            ]
        },
        "paVersion": {
            "type": "string",
            "allowedValues": [
                "9.0.9",
                "9.1.0",
                "10.0.9",
                "10.1.6",
                "latest"
            ],
            "defaultValue": "9.1.0"
        },
        "paOffer": {
            "type": "string",
            "defaultValue": "vmseries1",
            "allowedValues": [
                "vmseries1",
                "vmseries-flex"
            ]
        },
        "paVmSize": {
            "type": "string",
            "defaultValue": "Standard_DS3_v2",
            "allowedValues": [
                "Standard_DS3_v2",
                "Standard_DS4_v2",
                "Standard_DS5_v2"
            ]
        },
        "subnetPrefixName": {
            "type": "string",
            "defaultValue": ""
        },
        "serverVmName": {
            "type": "string",
            "defaultValue": ""
        },
        "serverVmSize": {
            "type": "string",
            "defaultValue": "Standard_B2s",
            "allowedValues": [
                "Standard_B1s",
                "Standard_B2s",
                "Standard_B2ms",
                "Standard_DS1_v2",
                "Standard_DS2_v3"
            ]
        },
        "subnetPrefixTrusted": {
            "type": "string",
            "defaultValue": ""
        }
    },
    "functions": [],
    "variables": {
        "tags": {
            "Department": "it",
            "Team": "networking",
            "Environment": "[parameters('environment')]",
            "Application": "[parameters('subnetPrefixName')]"
        },
        "mgmtPrefix": "[concat(parameters('subnetPrefixName'),'-management')]",
        "trustPrefix": "[concat(parameters('subnetPrefixName'),'-trusted')]",
        "uniqueId": "[uniqueString(resourceGroup().id)]",
        "untrustPrefix": "[concat(parameters('subnetPrefixName'),'-untrusted')]",
        "customData": "[concat('storage-account=',parameters('bootstrapStorageAccount'),',access-key=',parameters('bootstrapAccessKey'),',file-share=',parameters('bootstrapFileShare'),',share-directory=',parameters('fwName'))]",
        "storageAccountName": "[concat(parameters('fwName'),skip(variables('uniqueId'),5),'sa')]"
    },
    "resources": [
        {
            //  management NSG
            "name": "[concat(variables('mgmtPrefix'),'-',parameters('environment'),'-nsg')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-11-01",
            "tags": "[variables('tags')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowManagementInbound",
                        "properties": {
                            "description": "Allow Management Inbound",
                            "direction": "Inbound",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1000,
                            "destinationPortRanges": [
                                "22",
                                "443"
                            ],
                            "sourceAddressPrefixes": [
                                "63.156.58.20/32",
                                "4.1.98.242/32",
                                "72.208.101.143/32",
                                "10.10.24.0/24"
                            ]
                        }
                    },
                    {
                        "name": "DenyAllInBound",
                        "properties": {
                            "description": "Deny All Inbound",
                            "direction": "Inbound",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 4096,
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            // untrust NSG
            "name": "[concat(variables('untrustPrefix'),'-',parameters('environment'),'-nsg')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-11-01",
            "tags": "[variables('tags')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowAzureHealthProbeInBound",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "description": "AllowAzureHealthProbeInBound",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "168.63.129.16/32",
                            "destinationAddressPrefix": "10.18.8.0/24",
                            "access": "Allow",
                            "priority": 1000,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "Allow443And80InBound",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "description": "Allow443And80InBound",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1100,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [
                                "443",
                                "80"
                            ],
                            "sourceAddressPrefixes": [
                                "63.156.58.20/32",
                                "4.1.98.242/32",
                                "72.208.101.143/32"
                            ],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowSSH",
                        "properties": {
                            "description": "AllowSSH",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1200,
                            "direction": "Inbound",
                            "sourceAddressPrefixes": [
                                "63.156.58.20/32",
                                "4.1.98.242/32",
                                "72.208.101.143/32"
                            ],
                            "destinationPortRanges": [
                                "22",
                                "6622"
                            ]
                        }
                    },
                    {
                        "name": "AllowIPsec",
                        "properties": {
                            "protocol": "Esp",
                            "sourceAddressPrefixes": [
                                "63.156.58.20/32",
                                "4.1.98.242/32",
                                "72.208.101.143/32"
                            ],
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "*",
                            "access": "Allow",
                            "direction": "Inbound",
                            "priority": 1210
                        }
                    },
                    {
                        "name": "AllowUDPforGlobalProtect",
                        "properties": {
                            "protocol": "Udp",
                            "sourceAddressPrefixes": [
                                "63.156.58.20/32",
                                "4.1.98.242/32",
                                "72.208.101.143/32"
                            ],
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "4501",
                            "access": "Allow",
                            "direction": "Inbound",
                            "priority": 1220
                        }
                    },
                    {
                        "name": "AllowICMP",
                        "properties": {
                            "protocol": "Icmp",
                            "sourceAddressPrefixes": [
                                "63.156.58.20/32",
                                "4.1.98.242/32",
                                "72.208.101.143/32"
                            ],
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "*",
                            "access": "Allow",
                            "direction": "Inbound",
                            "priority": 1230
                        }
                    },
                    {
                        "name": "DenyAnyInBound",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "description": "DenyAnyInBound",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 4095,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyToVnetOutbound",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "description": "DenyToVnetOutbound",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "10.18.0.0/16",
                            "access": "Deny",
                            "priority": 4096,
                            "direction": "Outbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            // trust NSG
            "name": "[concat(variables('trustPrefix'),'-',parameters('environment'),'-nsg')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-11-01",
            "tags": "[variables('tags')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": []
            }
        },
        {
            // management PIP
            "name": "[concat(variables('mgmtPrefix'),'-',parameters('environment'),'-pip')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-11-01",
            "tags": "[variables('tags')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static",
                "dnsSettings": {
                    "domainNameLabel": "[concat(parameters('fwName'),'-mgmt')]"
                }
            }
        },
        {
            // untrust PIP
            "name": "[concat(variables('untrustPrefix'),'-',parameters('environment'),'-pip')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-11-01",
            "tags": "[variables('tags')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAllocationMethod": "Static",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('fwName')]"
                }
            }
        },
        {
            // Trusted subnet route table
            "name": "[concat(parameters('subnetPrefixName'),'-trusted-rt')]",
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2020-11-01",
            "tags": "[variables('tags')]",
            "location": "[parameters('location')]",
            "properties": {
                "disableBgpRoutePropagation": false,
                "routes": [
                    {
                        "name": "internet-forced-firewall",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "10.18.9.4",
                            "hasBgpOverride": false
                        }
                    },
                    {
                        "name": "untrust-forced-firewall",
                        "properties": {
                            "addressPrefix": "10.18.8.0/24",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "10.18.9.4",
                            "hasBgpOverride": false
                        }
                    }
                ]
            }
        },
        {
            // Unrusted subnet route table
            "name": "[concat(parameters('subnetPrefixName'),'-untrusted-rt')]",
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2020-11-01",
            "tags": "[variables('tags')]",
            "location": "[parameters('location')]",
            "properties": {
                "routes": [],
                "disableBgpRoutePropagation": true
            }
        },
        {
            // Management subnet route table
            "name": "[concat(parameters('subnetPrefixName'),'-management-rt')]",
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2020-11-01",
            "tags": "[variables('tags')]",
            "location": "[parameters('location')]",
            "properties": {
                "routes": [],
                "disableBgpRoutePropagation": true
            }
        },
        {
            "name": "dc-subnet-rt",
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2020-11-01",
            "location": "[resourceGroup().location]",
            "tags": {},
            "properties": {
                "routes": [
                    {
                        "name": "internet-forced-firewall",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "10.18.9.4",
                            "hasBgpOverride": false
                        }
                    },
                    {
                        "name": "local-forced-firewall",
                        "properties": {
                            "addressPrefix": "10.18.0.0/16",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "10.18.9.4",
                            "hasBgpOverride": false
                        }
                    }
                ],
                "disableBgpRoutePropagation": true
            }
        },
        {
            "name": "agent-subnet-rt",
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2020-11-01",
            "location": "[resourceGroup().location]",
            "tags": {},
            "properties": {
                "routes": [
                    {
                        "name": "internet-forced-firewall",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "10.18.9.4",
                            "hasBgpOverride": false
                        }
                    },
                    {
                        "name": "local-forced-firewall",
                        "properties": {
                            "addressPrefix": "10.18.0.0/16",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "10.18.9.4",
                            "hasBgpOverride": false
                        }
                    }
                ],
                "disableBgpRoutePropagation": true
            }
        },
        {
            // Create the Vnet
            "name": "[concat(parameters('subnetPrefixName'),'-',parameters('environment'),'-vnet')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-11-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', concat(variables('mgmtPrefix'),'-',parameters('environment'),'-nsg'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', concat(variables('trustPrefix'),'-',parameters('environment'),'-nsg'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', concat(variables('untrustPrefix'),'-',parameters('environment'),'-nsg'))]",
                "[resourceId('Microsoft.Network/routeTables', concat(parameters('subnetPrefixName'),'-management-rt'))]",
                "[resourceId('Microsoft.Network/routeTables', concat(parameters('subnetPrefixName'),'-trusted-rt'))]",
                "[resourceId('Microsoft.Network/routeTables', concat(parameters('subnetPrefixName'),'-untrusted-rt'))]"
            ],
            "tags": "[variables('tags')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.18.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('mgmtPrefix')]",
                        "properties": {
                            "addressPrefix": "10.18.10.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups',concat(variables('mgmtPrefix'),'-',parameters('environment'),'-nsg'))]"
                            },
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables',concat(parameters('subnetPrefixName'),'-management-rt'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('untrustPrefix')]",
                        "properties": {
                            "addressPrefix": "10.18.8.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups',concat(variables('untrustPrefix'),'-',parameters('environment'),'-nsg'))]"
                            },
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables',concat(parameters('subnetPrefixName'),'-untrusted-rt'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('trustPrefix')]",
                        "properties": {
                            "addressPrefix": "10.18.9.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups',concat(variables('trustPrefix'),'-',parameters('environment'),'-nsg'))]"
                            },
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables',concat(parameters('subnetPrefixName'),'-trusted-rt'))]"
                            }
                        }
                    },
                    {
                        "name": "dc-subnet",
                        "properties": {
                            "addressPrefix": "10.18.10.0/27",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables','dc-subnet-rt')]"
                            }
                        }
                    },
                    {
                        "name": "agent-subnet",
                        "properties": {
                            "addressPrefix": "10.18.10.32/27",
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables','agent-subnet-rt')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            // create the Management NIC
            "name": "[concat(variables('mgmtPrefix'),'-nic')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-11-01",
            "tags": "[variables('tags')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', concat(parameters('subnetPrefixName'),'-',parameters('environment'),'-vnet'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('mgmtPrefix'),'-',parameters('environment'),'-pip'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[variables('mgmtPrefix')]",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "10.18.10.4",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',concat(parameters('subnetPrefixName'),'-',parameters('environment'),'-vnet'),variables('mgmtPrefix'))]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('mgmtPrefix'),'-',parameters('environment'),'-pip'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            // create the Untrusted NIC
            "name": "[concat(variables('untrustPrefix'),'-nic')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-11-01",
            "tags": "[variables('tags')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', concat(parameters('subnetPrefixName'),'-',parameters('environment'),'-vnet'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('untrustPrefix'),'-',parameters('environment'),'-pip'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[variables('untrustPrefix')]",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "10.18.8.4",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',concat(parameters('subnetPrefixName'),'-',parameters('environment'),'-vnet'),variables('untrustPrefix'))]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(variables('untrustPrefix'),'-',parameters('environment'),'-pip'))]"
                            }
                        }
                    }
                ],
                "enableIPForwarding": true
            }
        },
        {
            // create the Trusted NIC
            "name": "[concat(variables('trustPrefix'),'-nic')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-11-01",
            "tags": "[variables('tags')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', concat(parameters('subnetPrefixName'),'-',parameters('environment'),'-vnet'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[variables('trustPrefix')]",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "10.18.9.4",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', concat(parameters('subnetPrefixName'),'-',parameters('environment'),'-vnet'),variables('trustPrefix'))]"
                            }
                        }
                    }
                ],
                "enableIPForwarding": true
            }
        },
        {
            // create the firewall
            "name": "[parameters('fwName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-03-01",
            "condition": "[parameters('deployFirewall')]",
            "tags": "[variables('tags')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('mgmtPrefix'),'-nic'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('trustPrefix'),'-nic'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('untrustPrefix'),'-nic'))]"
            ],
            "plan": {
                "name": "[parameters('paSku')]",
                "product": "[parameters('paOffer')]",
                "publisher": "paloaltonetworks"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('paVmSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('fwName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "customData": "[base64(variables('customData'))]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "paloaltonetworks",
                        "offer": "[parameters('paOffer')]",
                        "sku": "[parameters('paSku')]",
                        "version": "[parameters('paVersion')]"
                    },
                    "osDisk": {
                        "name": "[concat(parameters('fwName'),'-OSDisk')]",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('mgmtPrefix'),'-nic'))]",
                            "properties": {
                                "primary": true
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('untrustPrefix'),'-nic'))]",
                            "properties": {
                                "primary": false
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(variables('trustPrefix'),'-nic'))]",
                            "properties": {
                                "primary": false
                            }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https://',variables('storageAccountName'),'.blob.core.windows.net')]"
                    }
                }
            }
        },
        //
        //
        //
        //
        //
        //  Create the test server
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        //
        {
            //  storage account
            "name": "[variables('storageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2021-04-01",
            "tags": "[variables('tags')]",
            "location": "[parameters('location')]",
            "kind": "StorageV2",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            }
        },
        {
            //    network interface
            //
            "condition": true,
            "name": "[concat(parameters('serverVmName'),'-nic')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-11-01",
            "location": "[parameters('location')]",
            "tags": "[variables('tags')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', concat(parameters('subnetPrefixName'),'-',parameters('environment'),'-vnet'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipConfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "10.18.9.10",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',concat(parameters('subnetPrefixName'),'-',parameters('environment'),'-vnet'),variables('trustPrefix'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            //  create the server VM
            //
            "condition": true,
            "name": "[parameters('serverVmName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2021-03-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('serverVmName'),'-nic'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
            ],
            "tags": "[variables('tags')]",
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('serverVmSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "name": "[concat(parameters('serverVmName'),'-OSDisk')]",
                        "caching": "ReadWrite",
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "[parameters('osDiskType')]"
                        }
                    },
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "0001-com-ubuntu-server-jammy",
                        "sku": "22_04-lts",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('serverVmName'),'-nic'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[parameters('serverVmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "linuxConfiguration": {
                        "patchSettings": {
                            "patchMode": "ImageDefault"
                        }
                    }
                }
                //,
                //"diagnosticsProfile": {
                //    "bootDiagnostics": {
                //        "enabled": true,
                //        "storageUri": "[concat('https://',variables('storageAccountName'),'.blob.core.windows.net/')]"
                //    }
                //}
            }
        }
    ],
    "outputs": {
        "firewall.username": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Compute/virtualMachines',parameters('fwName'))).osProfile.adminUsername]"
        },
        "custom-data": {
            "type": "string",
            "value": "[variables('customData')]"
        },
        "trusted-subnet": {
            "type": "string",
            "value": "[concat(parameters('subnetPrefixTrusted'),'.0')]"
        },
        //"storage-uri": {
        //    "type": "string",
        //    "value": "[reference(resourceId('Microsoft.Compute/virtualMachines',parameters('fwName'))).diagnosticsProfile.bootDiagnostics.storageUri]"
        //}
        "storage-uri": {
            "type": "string",
            "value": "[concat('https://',variables('storageAccountName'),'.blob.core.windows.net/')]"
        }
    }
}